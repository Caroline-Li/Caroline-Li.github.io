<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-08-15T01:01:59-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Caroline Li</title><subtitle>Caroline Li's blog featuring projects, hobbies, and life as a UT Austin student majoring in Computer Science and Electrical Engineering!</subtitle><author><name>Caroline Li</name><email>caroline.li.atx@gmail.com</email></author><entry><title type="html">Ode to IoT Microcontrollers with AWS</title><link href="http://localhost:4000/jekyll/update/2020/06/11/Ode-to-IoT-Microcontrollers-with-AWS.html" rel="alternate" type="text/html" title="Ode to IoT Microcontrollers with AWS" /><published>2020-06-11T09:54:48-05:00</published><updated>2020-06-11T09:54:48-05:00</updated><id>http://localhost:4000/jekyll/update/2020/06/11/Ode-to-IoT-Microcontrollers-with-AWS</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2020/06/11/Ode-to-IoT-Microcontrollers-with-AWS.html">&lt;p&gt;Microcontrollers! What are they?&lt;/p&gt;

&lt;h2 id=&quot;microcontrollers-and-iot&quot;&gt;Microcontrollers and IoT&lt;/h2&gt;
&lt;p&gt;Microcontrollers are really awesome devices that can locally control sensors, other devices, and even connect to the
internet! They are integrated chips with processors, memory, and I/O pins. And they’re everywhere! Microcontrollers
control how most of our beloved tech devices work today, from cars, dishwashers, and TVs. They usually live and
comprise an embedded system.&lt;/p&gt;

&lt;p&gt;Okay, enough technical details. Why should we care about microcontrollers?&lt;/p&gt;

&lt;p&gt;Well, in addition to their abundance in technology, they’re also emerging in IoT (Internet of Things) 
technologies, where devices are connected to other devices through the internet! So cool! 
Think about Alexa or Hey Google.&lt;/p&gt;

&lt;h2 id=&quot;aws-iot-messages&quot;&gt;AWS IoT Messages&lt;/h2&gt;
&lt;p&gt;I recently decided to connect my ESP32 microcontroller to the cloud! After experimenting with AWS, I stumbled upon
AWS IoT, which allows you to connect a device to the cloud. In the AWS console, I simply made a device “thing”,
and created a certificate to allow the ESP32 to connect to AWS. Easy, right?&lt;/p&gt;

&lt;p&gt;Well, how does a certificate &lt;em&gt;magically&lt;/em&gt; allow a device to connect to AWS? AWS can’t verify the intent of the
device. For all it knows, the device could be malicious. But AWS trusts the person with the computer, which is me.
So it establishes a chain of trust and gives my computer a certificate and public/private key pair. Likewise, my
computer trusts the device. Now, AWS can verify a certificate the device provides. This certificate is signed by…
the computer’s private key from AWS!&lt;/p&gt;

&lt;p&gt;But we need more than just a certificate for a successful connection. For a microcontroller to talk to AWS, it 
sends and recieves messages through an MQTT client, which is a protocol like HTTP, but for sensors and
microcontrollers! To use MQTT, I installed an Arduino library for an MQTT client.&lt;/p&gt;

&lt;p&gt;Finally, to connect my ESP32 device to AWS IoT, I ran a simple Arduino program that made an MQTT client, which 
connected to AWS IoT. After a successful connection, it would send values from an output pin as an MQTT message to
AWS IoT. From my AWS IoT console, I could see the messages being published! YAY!&lt;/p&gt;

&lt;p&gt;Hold on, what does it mean when a message is published? AWS IoT has topics where these messages are sent
and recieved. Essentially, the MQTT client sends and recieves messages over “topics”, which are specific endpoints
that will recieve and send messages. This allows different devices to publish messages to different endpoints,
so their messages won’t be jumbled in the same message feed.&lt;/p&gt;

&lt;p&gt;That’s all!&lt;/p&gt;</content><author><name>Caroline Li</name><email>caroline.li.atx@gmail.com</email></author><category term="Projects" /><summary type="html">Microcontrollers! What are they?</summary></entry><entry><title type="html">Adventures with AWS and WordPress</title><link href="http://localhost:4000/jekyll/update/2020/05/31/Adventures-with-AWS-and-WordPress.html" rel="alternate" type="text/html" title="Adventures with AWS and WordPress" /><published>2020-05-31T09:54:48-05:00</published><updated>2020-05-31T09:54:48-05:00</updated><id>http://localhost:4000/jekyll/update/2020/05/31/Adventures-with-AWS-and-WordPress</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2020/05/31/Adventures-with-AWS-and-WordPress.html">&lt;p&gt;Newly lanuched WordPress website on AWS: &lt;a href=&quot;http://www.arclogic.com/&quot;&gt;arclogic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This website is still in development, but I have a great vision for its future!
More details to be posted later!&lt;/p&gt;

&lt;h2 id=&quot;website-hosting-on-aws&quot;&gt;Website Hosting on AWS&lt;/h2&gt;
&lt;p&gt;AWS, I’ve heard, is a big giant cloud service, so I thought it would be the perfect place to host a website!
To do this, I launched an AWS EC2 (Elastic Compute Cloud) instance with a Linux OS. You may be wondering why 
this is necessary. After all, website are just html rendered on your browser, right?&lt;/p&gt;

&lt;p&gt;Well, where is the html stored? How does your browser recieve this html? This where AWS comes to the rescue.
An EC2 instance on AWS can run web server code and store the html necessary for a website.
On my EC2 instance, I installed an Apache Web Server to handle HTTP get and post requests to the instance’s ip
address. Finally, I installed WordPress and configured the Apache Web Server to serve my WordPress website.&lt;/p&gt;

&lt;h2 id=&quot;dynamic-wordpress&quot;&gt;Dynamic WordPress&lt;/h2&gt;
&lt;p&gt;You may be thinking: wow that’s pretty easy. All I had to do was install a web server and WordPress on the cloud.
The website is hosted like magic! However, this is only the beginning of my adventures with AWS and WordPress.&lt;/p&gt;

&lt;p&gt;WordPress renders websites dynamically. That means WordPress doesn’t store static HTML. Instead, it consults a
database that stores the HTML, Javascript, and other cool stuff. Once it recieves this information, a web server
can send the information to your browser. Pretty complicated, right? That’s why WordPress websites are a little
slower than static websites like this blog site!&lt;/p&gt;

&lt;p&gt;All this dynamic website stuff forced me to make a MySQL database in AWS. Alternatively, WordPress websites
are small enough that an official database isn’t necessary. However, the cloud is about scalability! If my
website becomes famous one day and recieves lots of traffic, the storage from the EC2 instance won’t be enough!&lt;/p&gt;

&lt;p&gt;For these reasons, I launched an AWS RDS (Relational Database Service) instance that specifically stores my
WordPress website’s data. To allow my WordPress website to talk to the RDS MySQL database, I configured security
groups in my EC2 instance and MySQL credentials in my WordPress configuration file.&lt;/p&gt;

&lt;h2 id=&quot;website-done&quot;&gt;Website Done&lt;/h2&gt;
&lt;p&gt;That’s it! I got a simple, template theme WordPress site up and running on AWS!
YAY!!!!&lt;/p&gt;</content><author><name>Caroline Li</name><email>caroline.li.atx@gmail.com</email></author><category term="Projects" /><summary type="html">Newly lanuched WordPress website on AWS: arclogic</summary></entry><entry><title type="html">Book Review: Iron Gold</title><link href="http://localhost:4000/jekyll/update/2020/05/28/Book-Review-Iron-Gold.html" rel="alternate" type="text/html" title="Book Review: Iron Gold" /><published>2020-05-28T09:54:48-05:00</published><updated>2020-05-28T09:54:48-05:00</updated><id>http://localhost:4000/jekyll/update/2020/05/28/Book-Review-Iron-Gold</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2020/05/28/Book-Review-Iron-Gold.html">&lt;p&gt;Ah, &lt;em&gt;Iron Gold&lt;/em&gt;, the continuation of the &lt;em&gt;Red Rising&lt;/em&gt; series by Pierce Brown. Where to start?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Iron Gold&lt;/em&gt; simply has a different, colder feeling than its predecessors. Instead of the fast-paced
energy of the previous three books, &lt;em&gt;Iron Gold&lt;/em&gt; weaves in dark, sinister, morally ambiguous themes of
war, freedom, and ideology. It leisurely reveals the consequences of civil war in the ten year lapse
between &lt;em&gt;Morning Star&lt;/em&gt; and &lt;em&gt;Iron Gold&lt;/em&gt;. Civil war, it seems, has taken a terrible toll upon the original
trilogy’s characters. On the other hand, it has only emboldened our new characters with seething
ambition.&lt;/p&gt;

&lt;p&gt;Okay, no more elegance. That paragraph already took a lot of brain power.&lt;/p&gt;

&lt;p&gt;I actually didn’t like &lt;em&gt;Iron Gold&lt;/em&gt; as much as the original trilogy. It just attempts too much. There’s
too many storylines, too many sub-plots, and too many characters to remember. &lt;em&gt;Iron Gold&lt;/em&gt; begins
interstingly enough, but after a while, it just gets boring. That being said, I still enjoyed a few
storylines enough to pull through the ending.&lt;/p&gt;

&lt;p&gt;However, I really liked the themes and moral questions &lt;em&gt;Iron Gold&lt;/em&gt; attempts to address. Is violence
ever the answer? How much war can people endure, before the sacrafices outweigh the conquest? More
importantly, what is the worth of a life? Are people’s lives worth the final ambition in conquest?
Are the sacrafices worth the eventual peace?&lt;/p&gt;

&lt;p&gt;Our characters dream of peace, yet they are unable to find it. For as they fight for freedom,
their people fight for rights, and their enemies fight for order in the midst of chaos. Can freedom
excuse civil war? And as we ponder these questions, our heroes become
twisted, both noble and cruel, mirroring their enemies. Who, in &lt;em&gt;Iron Gold&lt;/em&gt;, deserves to win?&lt;/p&gt;

&lt;p&gt;With that, I leave the answer in your hands. Read &lt;em&gt;Iron Gold&lt;/em&gt; to find out!&lt;/p&gt;

&lt;p&gt;Peace out.&lt;/p&gt;</content><author><name>Caroline Li</name><email>caroline.li.atx@gmail.com</email></author><category term="Book Reviews" /><summary type="html">Ah, Iron Gold, the continuation of the Red Rising series by Pierce Brown. Where to start?</summary></entry><entry><title type="html">Hello World!</title><link href="http://localhost:4000/jekyll/update/2020/05/27/Hello-World.html" rel="alternate" type="text/html" title="Hello World!" /><published>2020-05-27T09:54:48-05:00</published><updated>2020-05-27T09:54:48-05:00</updated><id>http://localhost:4000/jekyll/update/2020/05/27/Hello-World</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2020/05/27/Hello-World.html">&lt;p&gt;Hello World! This is my very first blog post! Stay tuned for more!
&lt;!--more--&gt;&lt;/p&gt;
&lt;h2 id=&quot;jokes&quot;&gt;Jokes&lt;/h2&gt;
&lt;p&gt;Question: What is 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999*99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999?
Answer: 9
Question: how to spell guy fighters go?
Answer: you go guy fight&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello World!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Caroline Li</name><email>caroline.li.atx@gmail.com</email></author><category term="General" /><summary type="html">Hello World! This is my very first blog post! Stay tuned for more!</summary></entry></feed>